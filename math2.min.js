/**
 * Math2
 * An extended Math library for Javascript
 * https://github.com/josdejong/math2
 *
 * @version 0.0.2-SNAPSHOT
 * @date    2013-02-16
 *
 * @license
 * Copyright (C) 2013 Jos de Jong <wjosdejong@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
(function(){function t(t){return t instanceof Number||"number"==typeof t}function e(t){return t instanceof s}var r={type:{},parser:{}};"undefined"!=typeof module&&module.exports!==void 0&&(module.exports=r),"undefined"!=typeof exports&&(exports=r),"undefined"!=typeof require&&"undefined"!=typeof define&&define(function(){return r}),"undefined"!=typeof window&&(window.math2=r);var i=1e10,n=function(t,e){if(1/0===t)return"Infinity";if(t===-1/0)return"-Infinity";if(0/0===t)return"NaN";var r=Math.abs(t);if(r>1e-4&&1e6>r||0==r)return o(t,e)+"";var i=Math.round(Math.log(r)/Math.LN10),n=t/Math.pow(10,i);return o(n,e)+"E"+i},o=function(t,e){return e=void 0!=e?Math.pow(10,e):i,Math.round(t*e)/e};if(!Array.prototype.indexOf){Array.prototype.indexOf=function(t){for(var e=0;this.length>e;e++)if(this[e]==t)return e;return-1};try{console.log("Warning: Ancient browser detected. Please update your browser")}catch(a){}}Array.prototype.forEach||(Array.prototype.forEach=function(t,e){for(var r=0,i=this.length;i>r;++r)t.call(e||this,this[r],r,this)});var s=r.type.Complex=function(t,e){this.re=t||0,this.im=e||0};s.name="Complex",s.prototype.copy=function(){return new r.type.Complex(this.re,this.im)},s.prototype.toString=function(){var t="";return t=0===this.im?n(this.re):0===this.re?1===this.im?"i":-1===this.im?"-i":n(this.im)+"i":this.im>0?1==this.im?n(this.re)+" + i":n(this.re)+" + "+n(this.im)+"i":-1==this.im?n(this.re)+" - i":n(this.re)+" - "+n(Math.abs(this.im))+"i"},s.doc={name:"Complex",category:"type",syntax:["a + bi","a + b * i"],description:"A complex value a + bi, where a is the real part and b is the complex part, and i is the imaginary number defined as sqrt(-1).",examples:["2 + 3i","sqrt(-4)","(1.2 -5i) * 2"],seealso:["abs","arg","conj","im","re"]},r.E=Math.E,r.LN2=Math.LN2,r.LN10=Math.LN10,r.LOG2E=Math.LOG2E,r.LOG10E=Math.LOG10E,r.PI=Math.PI,r.SQRT1_2=Math.SQRT1_2,r.SQRT2=Math.SQRT2,r.I=new s(0,-1),r.pi=r.PI,r.e=r.E,r.i=r.I;var h=r.sqrt=function(r){if(t(r))return r>=0?Math.sqrt(r):h(new s(r,0));if(e(r)){var i=Math.sqrt(r.re*r.re+r.im*r.im);return r.im>=0?new s(.5*Math.sqrt(2*(i+r.re)),.5*Math.sqrt(2*(i-r.re))):new s(.5*Math.sqrt(2*(i+r.re)),-.5*Math.sqrt(2*(i-r.re)))}throw Error('Function sqrt does not support a parameter of type "'+(r&&r.name?r.name:"unknown")+'"')};h.doc={name:"sqrt",category:"Arithmetic",syntax:["sqrt(x)"],description:"Compute the square root value. If x = y * y, then y is the square root of x.",examples:["sqrt(25)","5 * 5","sqrt(-1)"],seealso:["square","multiply"]}})();